//  main.jsx
// -------------------------------------------------------------
// Punto de entrada principal del frontend de FixIT.
// Aqu√≠ se configuran las rutas de toda la aplicaci√≥n, tanto las
// p√∫blicas (Home, Login) como las protegidas (requieren sesi√≥n activa).
// -------------------------------------------------------------

import { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import "./index.css";
import { createBrowserRouter, RouterProvider } from "react-router-dom";

//  üß© Importaci√≥n de componentes y p√°ginas generales
import { Layout } from "./components/Layout/Layout";
import Home from "./components/Home/Home";              // P√°gina p√∫blica (inicio)
import Principal from "./components/Home/Principal";    // P√°gina interna tras login
import Login from "./components/Login/Login";
import { PageNotFound } from "./components/Home/PageNotFound";

//  üß© M√≥dulo de t√©cnicos
import { ListTecnico } from "./components/Tecnico/ListTecnico";
import { DetailTecnico } from "./components/Tecnico/DetailTecnico";

//  üß© M√≥dulo de tickets
import TableTickets from "./components/Ticket/TableTickets";
import { ListTickets } from "./components/Ticket/ListTickets";
import { DetailTicket } from "./components/Ticket/DetailTicket";

//  üß© M√≥dulo de asignaciones (nuevo para Persona 2)
import AsignacionesView from "./components/Asignaciones/AsignacionesView";

//  üß© Componente que protege rutas privadas (requiere sesi√≥n activa)
import ProtectedRoute from "./auth/ProtectedRoute";

// -------------------------------------------------------------
// Definici√≥n de todas las rutas principales del sistema FixIT
// -------------------------------------------------------------
const rutas = createBrowserRouter([
  //  üîì Rutas p√∫blicas (sin necesidad de autenticaci√≥n)
  { path: "/", element: <Home /> },
  { path: "/login", element: <Login /> },

  //  üîí Rutas protegidas (solo usuarios autenticados)
  {
    element: <ProtectedRoute />,
    children: [
      {
        element: <Layout />,
        children: [
          // P√°gina principal tras iniciar sesi√≥n
          { path: "Principal", element: <Principal /> },

          // Secci√≥n de t√©cnicos
          { path: "tecnicos", element: <ListTecnico /> },
          { path: "tecnico/:id", element: <DetailTecnico /> },

          // Secci√≥n de tickets
          { path: "tickets", element: <ListTickets /> },
          { path: "tickets/table", element: <TableTickets /> },
          { path: "tickets/:id", element: <DetailTicket /> },

          // ‚úÖ Nueva secci√≥n de asignaciones (vista tipo tablero)
          { path: "asignaciones", element: <AsignacionesView /> },

          // P√°gina 404 para rutas inexistentes
          { path: "*", element: <PageNotFound /> },
        ],
      },
    ],
  },
]);

// -------------------------------------------------------------
// Render principal de la aplicaci√≥n React
// -------------------------------------------------------------
// Se monta el enrutador en el DOM usando <RouterProvider>,
// lo que permite la navegaci√≥n interna sin recargar la p√°gina.
createRoot(document.getElementById("root")).render(
  <StrictMode>
    <RouterProvider router={rutas} />
  </StrictMode>
);